openapi: 3.0.1
info:
  title: Art Commissions OpenAPI
  version: v0
servers:
  - url: http://localhost:8080
paths:
  /v1/customers/{id}:
    get:
      tags:
        - Customer
      operationId: readById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "404":
          description: Attempt to read a nonexistent entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomerDto'
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomerDto'
    put:
      tags:
        - Customer
      operationId: update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerPostDto'
        required: true
      responses:
        "400":
          description: Received invalid data
        "404":
          description: Attempt to update a nonexistent entity
        "204":
          description: Success with no content provided
    delete:
      tags:
        - Customer
      operationId: delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "404":
          description: Attempt to delete a nonexistent entity
        "204":
          description: Success with no content provided
  /v1/commissions/{id}:
    get:
      tags:
        - Commission
      operationId: readById_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "404":
          description: Attempt to read a nonexistent entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommissionDto'
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommissionDto'
    put:
      tags:
        - Commission
      operationId: update_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommissionPostDto'
        required: true
      responses:
        "400":
          description: Received invalid data
        "404":
          description: Attempt to update a nonexistent entity
        "204":
          description: Success with no content provided
    delete:
      tags:
        - Commission
      operationId: delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "404":
          description: Attempt to delete a nonexistent entity
        "204":
          description: Success with no content provided
  /v1/commissions/{idCommission}/artists/{idArtist}:
    put:
      tags:
        - Commission
      operationId: addCommissioner
      parameters:
        - name: idCommission
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: idArtist
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "400":
          description: Received invalid data
        "404":
          description: Attempt to update a nonexistent entity
        "204":
          description: Success with no content provided
    delete:
      tags:
        - Commission
      operationId: removeCommissioner
      parameters:
        - name: idCommission
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: idArtist
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "404":
          description: Attempt to update a nonexistent entity
        "204":
          description: Success with no content provided
  /v1/artists/{id}:
    get:
      tags:
        - Artist
      operationId: readById_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "404":
          description: Attempt to read a nonexistent entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArtistDto'
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArtistDto'
    put:
      tags:
        - Artist
      operationId: update_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtistPostDto'
        required: true
      responses:
        "400":
          description: Received invalid data
        "404":
          description: Attempt to update a nonexistent entity
        "204":
          description: Success with no content provided
    delete:
      tags:
        - Artist
      operationId: delete_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "404":
          description: Attempt to delete a nonexistent entity
        "204":
          description: Success with no content provided
  /v1/customers:
    get:
      tags:
        - Customer
      operationId: readAll
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerDto'
    post:
      tags:
        - Customer
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerPostDto'
        required: true
      responses:
        "400":
          description: Received invalid data
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomerDto'
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomerDto'
  /v1/commissions:
    get:
      tags:
        - Commission
      operationId: readAll_1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommissionDto'
    post:
      tags:
        - Commission
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommissionPostDto'
        required: true
      responses:
        "400":
          description: Received invalid data
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommissionDto'
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommissionDto'
  /v1/artists:
    get:
      tags:
        - Artist
      operationId: readAll_2
      parameters:
        - name: name
          in: query
          description: Name of the artist
          required: false
          schema:
            type: string
        - name: art_type
          in: query
          description: The type of art an artist specializes on
          required: false
          schema:
            type: string
        - name: order_by
          in: query
          description: What to order the artists by
          required: false
          schema:
            type: string
          examples:
            activeCount:
              description: The number of artist's active commissions
              value: order_by=activeCount
            price:
              description: An artist's price per hour
              value: order_by=price
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtistDto'
    post:
      tags:
        - Artist
      operationId: create_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtistPostDto'
        required: true
      responses:
        "400":
          description: Received invalid data
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArtistDto'
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArtistDto'
  /v1/commissions/customers/{id}:
    get:
      tags:
        - Commission
      operationId: myCommissions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: filter_by
          in: query
          description: What to filter the commissions by
          required: false
          schema:
            type: string
          examples:
            active:
              description: Returns only currently active commissions
              value: filter_by=active
      responses:
        "200":
          description: Success with the customers commissions as return data
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommissionDto'
        "404":
          description: Attempt to read commissions of a nonexistent customer
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommissionDto'
components:
  schemas:
    CustomerPostDto:
      type: object
      properties:
        name:
          type: string
        myCommissions:
          type: array
          items:
            type: integer
            format: int64
    CommissionPostDto:
      type: object
      properties:
        artType:
          type: string
          enum:
            - SKETCHING
            - WATERCOLOR_PAINTING
            - ACRYLIC_PAINTING
            - DIGITAL_ART
            - MUSIC_COMPOSING
            - WRITING
            - SONG_WRITING
            - SCULPTURING
            - CROCHETING
        description:
          type: string
        estimatedHours:
          type: integer
          format: int32
        issuingDate:
          type: string
          format: date
        creator:
          type: integer
          format: int64
        commissioners:
          type: array
          items:
            type: integer
            format: int64
    ArtistPostDto:
      type: object
      properties:
        name:
          type: string
        pricePerHour:
          type: integer
          format: int32
        artType:
          type: string
          enum:
            - SKETCHING
            - WATERCOLOR_PAINTING
            - ACRYLIC_PAINTING
            - DIGITAL_ART
            - MUSIC_COMPOSING
            - WRITING
            - SONG_WRITING
            - SCULPTURING
            - CROCHETING
        commissions:
          type: array
          items:
            type: integer
            format: int64
        teacher:
          type: integer
          format: int64
        apprentices:
          type: array
          items:
            type: integer
            format: int64
    CustomerDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        myCommissions:
          type: array
          items:
            type: integer
            format: int64
    CommissionDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        artType:
          type: string
          enum:
            - SKETCHING
            - WATERCOLOR_PAINTING
            - ACRYLIC_PAINTING
            - DIGITAL_ART
            - MUSIC_COMPOSING
            - WRITING
            - SONG_WRITING
            - SCULPTURING
            - CROCHETING
        description:
          type: string
        estimatedHours:
          type: integer
          format: int32
        price:
          type: integer
          format: int32
        issuingDate:
          type: string
          format: date
        estimatedEndDate:
          type: string
          format: date
        creator:
          type: integer
          format: int64
        commissioners:
          type: array
          items:
            type: integer
            format: int64
    ArtistDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        pricePerHour:
          type: integer
          format: int32
        artType:
          type: string
          enum:
            - SKETCHING
            - WATERCOLOR_PAINTING
            - ACRYLIC_PAINTING
            - DIGITAL_ART
            - MUSIC_COMPOSING
            - WRITING
            - SONG_WRITING
            - SCULPTURING
            - CROCHETING
        commissions:
          type: array
          items:
            type: integer
            format: int64
        teacher:
          type: integer
          format: int64
        apprentices:
          type: array
          items:
            type: integer
            format: int64
